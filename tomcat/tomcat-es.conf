input {
    file {
        path => "/mnt/tmp/new/tomcat-svc/*.json"
        start_position => "beginning"
        sincedb_path => "/dev/null" 

        codec => json {}
    }
}
filter {
	#if ([service] != "data_ws") and ([service] != "transfer_ws") and ([service] != "vospace_ws") and (([service] == "ac_ws") and ([servlet] == "Profiler")) {
	#	drop {}
	#}
	
	if ([service] !~ /_ws/) { drop {} }

	if (([service] == "ac_ws") and ([servlet] == "Profiler")) { drop {} }

	#if [useragent] =~ /.*(?i:bingbot|bot|borg|google(^tv)|yahoo|slurp|msnbot|msrbot|openbot|archiver|netresearch|lycos|scooter|altavista|teoma|gigabot|baiduspider|blitzbot|oegp|charlotte|furlbot|http%20client|polybot|htdig|ichiro|mogimogi|larbin|pompos|scrubby|searchsight|seekbot|semanticdiscovery|silk|snappy|speedy|spider|voila|vortex|voyager|zao|zeal|dataparksearch|findlinks|crawler|Netvibes|Sogou Pic Spider|ICC\-Crawler|Innovazion Crawler|Daumoa|EtaoSpider|A6\-Indexer|YisouSpider|Riddler|DBot|wsr\-agent|Xenu|SeznamBot|PaperLiBot|SputnikBot|CCBot|ProoXiBot|Scrapy|Ocelli|YaBrowser|Feedly|fetcher|megaindex).*/ {
    #     mutate {
    #        add_tag => "robot"
    #     }
    #}

    date {
        match => ["timestamp", "yyyy-MM-dd HH:mm:ss.SSS"]
        target => "@timestamp"
    }

	if ([from]) {
		geoip {
			source => "from"
			target => "geoip"
			database => "/home/superliuxz/GeoLite2-City.mmdb"
		}
	}

    mutate {
		convert => ["time", "integer"]
		convert => ["authCode", "integer"]
		convert => ["bytes", "integer"]
		convert => ["duration", "integer"]
		convert => ["success", "boolean"]
    }
}
output {

    elasticsearch {
       	hosts => [ "192.168.59.226:9200" ]
       	index => "logs-tomcat"
		user => elastic
		password => cadcstats
    }

    #stdout { codec => rubydebug }
}
